(* 
    DoubleLinkedList.mod - A doubly linked list implementation.

    Copyright (C) 2025
    Released under The 3-Clause BSD License.
*)
DEFINITION DoubleLinkedList;

IMPORT Collections;

TYPE
    List = POINTER TO ListDesc;

PROCEDURE New(): List;

PROCEDURE Free(VAR list: List);

PROCEDURE Append(list: List; item: Collections.ItemPtr);

PROCEDURE RemoveFirst(list: List; VAR result: Collections.ItemPtr);

PROCEDURE RemoveLast(list: List; VAR result: Collections.ItemPtr);

PROCEDURE InsertAt(list: List; position: INTEGER; item: Collections.ItemPtr): BOOLEAN;

PROCEDURE Count(list: List): INTEGER;

PROCEDURE IsEmpty(list: List): BOOLEAN;

(* Apply a procedure to each element in the list, passing a state variable. 
If visit returns FALSE, iteration stops. *)
PROCEDURE Foreach(list: List; visit: Collections.VisitProc; VAR state: Collections.VisitorState);

(* Get item at specified position (0-based index), returns TRUE if successful. *)
PROCEDURE GetAt(list: List; position: INTEGER; VAR result: Collections.ItemPtr): BOOLEAN;

PROCEDURE Head(list: List; VAR result: Collections.ItemPtr): BOOLEAN;

PROCEDURE Tail(list: List; VAR result: Collections.ItemPtr): BOOLEAN;

END DoubleLinkedList.
