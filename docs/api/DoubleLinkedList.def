(* 
    DoubleLinkedList.Mod

    Copyright (C) 2025
    Released under The 3-Clause BSD License.
*)
DEFINITION DoubleLinkedList;

IMPORT Collections;

TYPE
    ListItem = RECORD (Collections.Item)
        next: POINTER TO ListItem;
        prev: POINTER TO ListItem
    END;
    ListItemPtr = POINTER TO ListItem;

    List = POINTER TO ListDesc;

PROCEDURE New(): List;

PROCEDURE Free(VAR list: List);

PROCEDURE Append(list: List; item: ListItemPtr);

PROCEDURE RemoveFirst(list: List; VAR result: ListItemPtr);

PROCEDURE RemoveLast(list: List; VAR result: ListItemPtr);

PROCEDURE InsertAfter(list: List; after: ListItemPtr; item: ListItemPtr);

PROCEDURE InsertBefore(list: List; before: ListItemPtr; item: ListItemPtr);

PROCEDURE Count(list: List): INTEGER;

PROCEDURE IsEmpty(list: List): BOOLEAN;

(* Apply a procedure to each element in the list, passing a state variable. 
If visit returns FALSE, iteration stops. *)
PROCEDURE Foreach(list: List; visit: Collections.VisitProc; VAR state: Collections.VisitorState);

PROCEDURE Head(list: List): ListItemPtr;

END DoubleLinkedList.
