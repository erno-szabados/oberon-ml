(* Tests.Mod - A module providing simple test support for Oberon-7.

Copyright (C) 2021 R. S. Doiel

Released under The 3-Clause BSD License.
See https://opensource.org/licenses/BSD-3-Clause

*)
DEFINITION Tests; (* portable *)
CONST
  MAXSTR = 1024;

TYPE
    (* TestProc is the signature of a test procedure. It is simple.
        if a test successeds it returns true, otherwise it returns false.
        The procedure Test counts the number of test run and results
        updating variable parameters of success and errors. In turn
        these are passed to Summarize to return a summary report. *)
    TestProc = PROCEDURE () : BOOLEAN;

    TestSet = POINTER TO TestSetDesc;
    TestSetDesc = RECORD
                    title : ARRAY MAXSTR OF CHAR;
                    fn : TestProc;
                    next : TestSet
                  END;

(* DisplayString display quoted ARRAY OF CHAR with prefixed by msg *)
PROCEDURE DisplayString(msg: ARRAY OF CHAR; source : ARRAY OF CHAR);

(* ExpectedInt compares to int display msg on error and updates test to
   FALSE if they don'y match *)
PROCEDURE ExpectedInt(expected, got : INTEGER; msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ExpectedReal compares to REAL display msg on error and updates test to
   FALSE if they don'y match *)
PROCEDURE ExpectedReal(expected, got : REAL; msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ExpectedString compare two ARRAY OF CHAR, set test to FALSE
    if they don't match and display msg *)
PROCEDURE ExpectedString(s1, s2, msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ExpectedChar compare two CHAR, set test to FALSE if they don't
    match and display msg *)
PROCEDURE ExpectedChar(expected, got : CHAR; msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ExpectedBool compare to BOOLEAN values, set test to FALSE if they
    don't match and display message *)
PROCEDURE ExpectedBool(expected, got : BOOLEAN; msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ExpectedBytes compares the first N values to two array of byte *)
PROCEDURE ExpectedBytes(expected, got : ARRAY OF BYTE; n : INTEGER; msg : ARRAY OF CHAR; VAR test: BOOLEAN);

(*ExpectedSet compares two sets, display message if they don't match and
   set the value of test to FALSE *)
PROCEDURE ExpectedSet(expected, got : SET; msg : ARRAY OF CHAR; VAR test : BOOLEAN);

(* ShowTitle displays the title in standard out and underlined with '=' *)
PROCEDURE ShowTitle(s : ARRAY OF CHAR);

(* Test -- run the test method and update the success and error variables
provided. *)
PROCEDURE Test(fn : TestProc; VAR success : INTEGER; VAR errors : INTEGER);

(* Summarize -- sumarize the results using the test title, success
and error counts. *)
PROCEDURE Summarize(title : ARRAY OF CHAR; successes, errors : INTEGER);

(* New initializes a new TestSet with a title *)
PROCEDURE Init(VAR ts: TestSet; title : ARRAY OF CHAR);

PROCEDURE Add(VAR ts : TestSet; fn : TestProc);

PROCEDURE Run(ts : TestSet) : BOOLEAN;

END Tests.
